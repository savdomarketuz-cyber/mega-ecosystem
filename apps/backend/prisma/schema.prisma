// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// 1. Ma'lumotlar bazasi ulanishini sozlash
datasource db {
  provider = "postgresql" // Yoki "mysql", "sqlite"
  url      = env("DATABASE_URL")
}

// 2. Prisma Client generatori
generator client {
  provider = "prisma-client-js"
}

// 3. Foydalanuvchi roli uchun Enum
enum Role {
  CUSTOMER
  ADMIN
}

// 4. Buyurtma statusi uchun Enum
enum OrderStatus {
  NEW
  COLLECTING
  AWAITING_COURIER
  WITH_COURIER
  AT_PICKUP_POINT
  OUT_FOR_DELIVERY
  DELIVERED
  CANCELLED // Bekor qilingan statusni ham qo'shib qo'yish foydali
}

// ============== MODELLAR =================

// ðŸ‘¤ Foydalanuvchi Modeli
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[] // 1-to-many: Bitta user -> ko'p orderlar
}

// ðŸ—‚ Kategoriya Modeli (Daraxt shaklida yangilangan)
model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // O'z-o'ziga bog'lanish uchun
  parentId  Int?
  parent    Category?  @relation("ParentChild", fields: [parentId], references: [id])
  children  Category[] @relation("ParentChild")

  products Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int      @default(0)
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  orderItems OrderItem[]
}
// ðŸ›’ Buyurtma Modeli
model Order {
  id         Int         @id @default(autoincrement())
  totalPrice Float
  status     OrderStatus @default(NEW)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  userId Int
  user   User @relation(fields: [userId], references: [id])

  items OrderItem[] // Buyurtma ichidagi mahsulotlar ro'yxati
}

// ðŸ“‹ Buyurtmadagi mahsulotlar (Pivot jadval)
model OrderItem {
  id       Int @id @default(autoincrement())
  quantity Int
  price    Float // Sotilgan paytdagi narxni saqlash uchun

  orderId   Int
  order     Order @relation(fields: [orderId], references: [id])

  productId Int
  product   Product @relation(fields: [productId], references: [id])
}